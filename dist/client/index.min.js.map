{"version":3,"file":"index.min.js","sources":["../../node_modules/rollup-plugin-node-builtins/src/es6/empty.js","../../node_modules/rollup-plugin-node-builtins/src/es6/path.js","../../node_modules/rollup-plugin-node-builtins/src/es6/events.js","../../src/service/service.js","../../src/client/client.js","../../src/core/core.js"],"sourcesContent":["export default {};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexport function resolve() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : '/';\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexport function normalize(path) {\n  var isPathAbsolute = isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isPathAbsolute).join('/');\n\n  if (!path && !isPathAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isPathAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexport function isAbsolute(path) {\n  return path.charAt(0) === '/';\n}\n\n// posix version\nexport function join() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n}\n\n\n// path.relative(from, to)\n// posix version\nexport function relative(from, to) {\n  from = resolve(from).substr(1);\n  to = resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n}\n\nexport var sep = '/';\nexport var delimiter = ':';\n\nexport function dirname(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n}\n\nexport function basename(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n}\n\n\nexport function extname(path) {\n  return splitPath(path)[3];\n}\nexport default {\n  extname: extname,\n  basename: basename,\n  dirname: dirname,\n  sep: sep,\n  delimiter: delimiter,\n  relative: relative,\n  join: join,\n  isAbsolute: isAbsolute,\n  normalize: normalize,\n  resolve: resolve\n};\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b' ?\n    function (str, start, len) { return str.substr(start, len) } :\n    function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","'use strict';\n\nvar domain;\n\n// This constructor is used to store event handlers. Instantiating this is\n// faster than explicitly calling `Object.create(null)` to get a \"clean\" empty\n// object (tested with v8 v4.9).\nfunction EventHandlers() {}\nEventHandlers.prototype = Object.create(null);\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nexport default EventEmitter;\nexport {EventEmitter};\n\n// nodejs oddity\n// require('events') === require('events').EventEmitter\nEventEmitter.EventEmitter = EventEmitter\n\nEventEmitter.usingDomains = false;\n\nEventEmitter.prototype.domain = undefined;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\nEventEmitter.init = function() {\n  this.domain = null;\n  if (EventEmitter.usingDomains) {\n    // if there is an active domain, then attach to it.\n    if (domain.active && !(this instanceof domain.Domain)) {\n      this.domain = domain.active;\n    }\n  }\n\n  if (!this._events || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = new EventHandlers();\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events, domain;\n  var needDomainExit = false;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  domain = this.domain;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    er = arguments[1];\n    if (domain) {\n      if (!er)\n        er = new Error('Uncaught, unspecified \"error\" event');\n      er.domainEmitter = this;\n      er.domain = domain;\n      er.domainThrown = false;\n      domain.emit('error', er);\n    } else if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n    // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n    // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  if (needDomainExit)\n    domain.exit();\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = new EventHandlers();\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] :\n                                          [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n                            existing.length + ' ' + type + ' listeners added. ' +\n                            'Use emitter.setMaxListeners() to increase limit');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        emitWarning(w);\n      }\n    }\n  }\n\n  return target;\n}\nfunction emitWarning(e) {\n  typeof console.warn === 'function' ? console.warn(e) : console.log(e);\n}\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction _onceWrap(target, type, listener) {\n  var fired = false;\n  function g() {\n    target.removeListener(type, g);\n    if (!fired) {\n      fired = true;\n      listener.apply(target, arguments);\n    }\n  }\n  g.listener = listener;\n  return g;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || (list.listener && list.listener === listener)) {\n        if (--this._eventsCount === 0)\n          this._events = new EventHandlers();\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length; i-- > 0;) {\n          if (list[i] === listener ||\n              (list[i].listener && list[i].listener === listener)) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (list.length === 1) {\n          list[0] = undefined;\n          if (--this._eventsCount === 0) {\n            this._events = new EventHandlers();\n            return this;\n          } else {\n            delete events[type];\n          }\n        } else {\n          spliceOne(list, position);\n        }\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = new EventHandlers();\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = new EventHandlers();\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        for (var i = 0, key; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = new EventHandlers();\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        do {\n          this.removeListener(type, listeners[listeners.length - 1]);\n        } while (listeners[0]);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  var evlistener;\n  var ret;\n  var events = this._events;\n\n  if (!events)\n    ret = [];\n  else {\n    evlistener = events[type];\n    if (!evlistener)\n      ret = [];\n    else if (typeof evlistener === 'function')\n      ret = [evlistener.listener || evlistener];\n    else\n      ret = unwrapListeners(evlistener);\n  }\n\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, i) {\n  var copy = new Array(i);\n  while (i--)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","import fs from 'fs'\nimport EventEmitter from 'events'\n/**\n * Class for the service\n * @extends EventEmitter\n */\nexport default class MockerService extends EventEmitter {\n  /**\n   * Create a service.\n   * @param {string} name - Name of the service\n   * @param {string|Object} opts - Can be a string for the location of a json file with the options or the options itself.\n   * @param {string} opts.schema - Schema reference for the service model.\n   * @param {string} opts.total - Total of items to seed.\n   * @param {MockerApp} app - Instance of MockerApp.\n   */\n  constructor(name, opts, app, faker = {}) {\n    super()\n    this.app = app\n    this.faker = faker // Faker is passed from the app so don't need to bundle it in the client version\n    this.name = name\n    this.configured = false\n    this.items = []\n    this.startService(opts)\n  }\n  /**\n   * Total items created\n   * @type {number}\n   */\n  get total () { return this.items.length }\n  /**\n   * @method startService\n   * Check the service options and starts configuration\n   */\n  startService (opts) {\n    let options = opts\n    if (typeof options === 'string') {\n      const json = fs.readFileSync(options, { encoding:'utf8' })\n      options = JSON.parse(json)\n    } else if (Array.isArray(options) || typeof options !== 'object') {\n      throw new Error('Options type cannot be \"', typeof options, '\"')\n    }\n    this.configureService(options)\n  }\n  /**\n   * @method configureService\n   * Configure service\n   */\n  configureService ({ schema = {}, total = 10 }) {\n    this.schema = schema\n    this._total = total\n    this.app.server && this.registerRoutes()\n  }\n  /**\n   * @method registerRoutes\n   * Register service routes\n   */\n  registerRoutes () {\n    const baseRoutes = [{\n      method: 'GET',\n      path: `/${this.name}/{id}`,\n      handler: (request) => {\n        return this.items[request.params.id - 1]\n      }\n    },{\n      method: 'GET',\n      path:  `/${this.name}`,\n      handler: (request) => {\n        const itemsToReturn = this.items.filter(item => {\n          const limit = parseInt(request.query.limit) || 4\n          const skip = parseInt(request.query.skip) || 0\n          return item.id <= limit + skip && item.id > skip\n        })\n        return itemsToReturn\n      }\n    }]\n    this.app.server.route(baseRoutes)\n  }\n  /**\n   * @method generateCachedItems\n   * Generate items to data cache mock\n   */\n  generateCachedItems () {\n    this.items = []\n    for (let i = 0; this._total > i; i++) {\n      const item = this.generateItem()\n      this.items.push(item)\n    }\n    this.app.log(`generated ${this.items.length} for service ${this.name}`)\n  }\n  /**\n   * @method generateItem\n   * Generate a single item based on a schema configuration.\n   * @param {Object} schema - Base schema for item generation. defaults to `this.schema`\n   * @param {number} id - Id of the item to be generated. defaults to `this.items.length + 1`\n   */\n  generateItem (schema, id) {\n    const sch = schema || this.schema\n    const keys = Object.keys(sch)\n    const obj = { id: id || this.items.length + 1 }\n    for (let i = 0; keys.length > i; i++) {\n      const key = keys[i]\n      obj[key] = this.generateProperty(sch[key])\n    }\n    return obj\n  }\n  /**\n   * @method generateProperty\n   * Generate a single property for an item.\n   * @param {string} type - Type of the property. defaults to `string`.\n   * @param {number} total - If type is `array` sets the total number of items to be created in the array.\n   * @param {number} properties - If type is `object` or `array` and fakerType is set to `object` provides the schema of the object to be generated.\n   * @param {string} fakerType - Type of faker to be used. Check the possible [API methods](http://marak.github.io/faker.js/#toc7__anchor)\n   */\n  generateProperty ({ type = 'string', total = 4, properties = {}, fakerType = 'lorem.text'}) {\n    if (!this.faker) {\n      return\n    }\n    if (typeof type === 'array') {\n      const items = []\n      for (let i = 0; total > i; i++) {\n        if (fakerType === 'object') {\n          const obj = this.generateItem(properties, i + 1)\n          items.push(obj)\n        } else {\n          const props = fakerType.split('.')\n          if (props.length < 2) {\n            this.app.handleError('missing props')\n          }\n          let fakerFunc = this.faker[props[0]][props[1]]\n          if (!fakerFunc) {\n            fakerFunc = this.faker.lorem.text\n          }\n          items.push(fakerFunc())\n        }\n        return items\n      }\n    } else if (typeof type === 'object') {\n      return this.generateItem(properties, 1)\n    } else {\n      const props = fakerType.split('.')\n      if (props.length < 2) {\n        this.app.handleError('missing props')\n      }\n      let fakerFunc = this.faker[props[0]][props[1]]\n      if (!fakerFunc) {\n        fakerFunc = this.faker.lorem.text\n      }\n      return fakerFunc()\n    }\n  }\n  /**\n   * @method destroy\n   * Destroys the service\n   */\n   destroy () {\n    this.removeAllListeners()\n  }\n  /**\n   * @method find\n   * Get many items from the generated cached items\n   * @param {number} limit - Number of items to return\n   * @returns {array} - Array of items\n   */\n  find ({ limit = 4, skip = 0 }) {\n    return this.app.transport.get(`${this.name}?limit=${limit}&skip=${skip}`).then(res => {\n      return { data: res.data, total: this.total }\n    }).catch(err => {\n      const errMessage = err.response.data.message\n      this.emit('error', errMessage)\n    })\n  }\n  /**\n   * @method get\n   * Get one from the generated cached items\n   * @param {number} id - Id of the item to be returned\n   * @returns {Object} - Item from the generated cached items\n   */\n  get (id = 1) {\n    return this.app.transport.get(`${this.name}/${id}`).then(res => {\n      return res.data\n    }).catch(err => {\n      const errMessage = err.response.data.message\n      this.emit('error', errMessage)\n    })\n  }\n  /**\n   * @method createStore\n   * Create a vuex module based on the service\n   * @returns {Object} - Vuex Module\n   */\n  createStore () {\n    const self = this\n    return {\n      namespaced: true,\n      state: {\n        items: [],\n        total: 0,\n        isFindPending: false,\n        isGetPending: false\n      },\n      mutations: {\n        ADD_ITEM_TO_STORE (state, item) {\n          const exists = !!state.items.filter(i => i.id === item.id)[0]\n          if (!exists) {\n            state.items.push(item)\n          }\n        },\n        UPDATE_TOTAL (state, total) {\n          state.total = total\n        },\n        IS_FIND_PENDING (state) {\n          state.isFindPending = true\n        },\n        FIND_FINISHED (state) {\n          state.isFindPending = false\n        },\n        IS_GET_PENDING (state) {\n          state.isGetPending = true\n        },\n        GET_FINISHED (state) {\n          state.isGetPending = false\n        }\n      },\n      actions: {\n        findItems ({ commit }, { limit, skip }) {\n          commit('IS_FIND_PENDING')\n          return self.find({ limit, skip }).then(res => {\n            commit('UPDATE_TOTAL', res.total)\n            res.data.forEach(item => {\n              commit('ADD_ITEM_TO_STORE', item)\n            })\n          }).finally(() => {\n            commit('FIND_FINISHED')\n          })\n        },\n        getItem (id) {\n          commit('IS_GET_PENDING')\n          return self.get(id).then(item => {\n            commit('ADD_ITEM_TO_STORE', item)\n          }).finally(() => {\n            commit('GET_FINISHED')\n          })\n        }\n      },\n      getters: {\n        getById: (state) => (id) => {\n          return state.items.filter(item => item.id === id)[0]\n        },\n        findInStore: (state) => (limit = 4, skip = 0) => {\n          return state.items.filter(item => item.id <= limit + skip && item.id > skip)\n        }\n      }\n    }\n  }\n}","import MockerCore from '../core/core.js'\n/**\n * Class for the client app to request data from the server\n * @extends MockerCore\n */\nexport default class MockerClient extends MockerCore {\n  /**\n   * Create mock app\n   * @param {Object} options - Options for the app creation\n   * @param {string} options.host - host app will be on. default = localhost\n   * @param {string} options.port - port the app will listen to. default = 3001\n   * @param {object} options.services - services configuration, each `key` will be one service. To check options see MockerService class\n   * @param {string} options.servicesPath - path to a folder containing a json file for each service, with configuration options.\n   * @param {boolean} options.debug - debug mode.\n   */\n  constructor(args) {\n    super(args)\n    if (args.transport) {\n      this.transport = args.transport.create({\n        baseURL: 'http://' + this._host + ':' + this._port + '/'\n      })\n    }\n    this.registerServices()\n  }\n  /**\n   * @method createVuexModules\n   * Create a vuex module for each configured services\n   * @returns {Object} - Object of vuex modules\n   */\n  createVuexModules () {\n    const modules = {}\n    Object.keys(this.services).forEach(service => {\n      modules[service] = this.services[service].createStore()\n    })\n    return modules\n  }\n}","import fs from 'fs'\nimport path from 'path'\nimport EventEmitter from 'events'\nimport MockerService from '../service/service.js'\n/**\n * Class for the client app to request data from the server\n * @extends EventEmitter\n */\nexport default class MockerCore extends EventEmitter {\n  /**\n   * Create mock app\n   * @param {Object} options - Options for the app creation\n   * @param {string} options.host - host app will be on. default = localhost\n   * @param {string} options.port - port the app will listen to. default = 3001\n   * @param {object} options.services - services configuration, each `key` will be one service. To check options see MockerService class\n   * @param {string} options.servicesPath - path to a folder containing a json file for each service, with configuration options.\n   * @param {boolean} options.debug - debug mode.\n   */\n  constructor({ port = 3001, host = 'localhost', services = {}, servicesPath, debug = false }) {\n    super()\n    this.services = {}\n    this.faker = {}\n    this._host = host\n    this._port = port\n    this._services = services\n    this._servicesPath = servicesPath\n    this.debug = debug\n    this.transport = {\n      get: url => this.transportGet(url)\n    }\n  }\n  /**\n   * Getter for the host option\n   * @type {string}\n   */\n  get host () { return this._host }\n  /**\n   * Getter for the port option\n   * @type {string|number}\n   */\n  get port () { return this._port }\n  /**\n   * Array of names of the registered services\n   * @type {array}\n   */\n  get servicesRegistered () { return Object.keys(this.services) }\n  /**\n   * @method registerServices\n   * Create and register each service passed in options.\n   * If a `servicePath` is provided, it will overide the `services` provided\n   */\n  registerServices () {\n    this.services = {}\n    if (this._servicesPath) {\n      const pahtJoin = path.join(this._servicesPath)\n      fs.readdirSync(pahtJoin).forEach(file => {\n        const serviceName = this.checkFile(file)\n        if (serviceName) {\n          this.registerService(serviceName, pahtJoin + `/${file}`)\n        }\n      })\n    } else if (this._services && Object.keys(this._services).length > 0) {\n      Object.keys(this._services).forEach(key => {\n        const serviceName = key\n        const serviceConfig = this._services[serviceName]\n        this.registerService(serviceName, serviceConfig)\n      })\n    } else {\n      this.handleError('No services found')\n    }\n    if (this.servicesRegistered.length === 0) {\n      this.handleError('No services found')\n    }\n  }\n  /**\n   * @method registerService\n   * Create and register a single service.\n   * @param {string} serviceName - Name of the service\n   * @param {object|string} serviceConfig - Config of the service\n   */\n  registerService (serviceName, serviceConfig) {\n    this.log(`Registering ${serviceName} service`)\n    const service = new MockerService(serviceName, serviceConfig, this, this.faker)\n    this.services[serviceName] = service\n    this.log(`${serviceName} registered`)\n    this.log(this.servicesRegistered)\n  }\n  /**\n   * @method transportGet\n   * Mocks a url request\n   */\n  transportGet (url) {\n    if (!url) {\n      this.handleError('No path')\n    }\n    if (url.includes('?')) {\n      const service = url.split('?')[0]\n      const params = url.split('?')[1]\n      let limit = params.split('&').filter(arg => arg.includes('limit'))[0]\n      let skip = params.split('&').filter(arg => arg.includes('skip'))[0]\n      limit = parseInt(limit.split('=')[1])\n      skip = parseInt(skip.split('=')[1])\n      const data = this.service(service).items.filter(item => item.id <= limit + skip && item.id > skip)\n      const total = this.service(service).items.length\n      return Promise.resolve({ data, total })\n    } else {\n      const service = url.split('/')[0]\n      const params = url.split('/')[1]\n      return Promise.resolve(this.service(service).items.filter(item => item.id === parseInt(params))[0])\n    }\n  }\n  /**\n   * @method checkFile\n   * Check a filename if it a json and returns it's name\n   * @param {string} file - file name with format\n   * @returns {string|null} name of the file or null if the file is not a json\n   */\n  checkFile (file) {\n    const name = file.split('.')\n    const format = name.pop()\n    const isService = format === 'json'\n    return isService ? name.join('.') : null\n  }\n  /**\n   * @method service\n   * Start the app\n   * @param {string} serviceName - Name of the service\n   * @returns {MockerService}\n   */\n  service (serviceName) {\n    if (!this.services[serviceName]) {\n      this.handleError(`No service with the name ${serviceName} registered`)\n    }\n    return this.services[serviceName]\n  }\n  /**\n   * @method seedServices\n   * Seeds each service with sample data.\n   */\n  seedServices () {\n    Object.values(this.services).forEach(service => {\n      service.generateCachedItems()\n    })\n  }\n  /**\n   * @method onError\n   * Handle error\n   * @param err - Error message\n   */\n  handleError (err) {\n    this.emit('error', err)\n    throw new Error(err)\n  }\n  /**\n   * @method log\n   * Handle log\n   * @param msg - Message to log\n   */\n  log (msg) {\n    this.debug && console.log(msg)\n  }\n}"],"names":["normalizeArray","parts","allowAboveRoot","up","i","length","last","splice","unshift","splitPath","filename","splitPathRe","exec","slice","resolve","resolvedPath","resolvedAbsolute","arguments","path","TypeError","charAt","filter","split","p","join","normalize","isPathAbsolute","isAbsolute","trailingSlash","substr","extname","basename","ext","f","dirname","root","result","dir","sep","delimiter","relative","from","to","trim","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","push","concat","Array","prototype","call","index","xs","res","str","len","EventHandlers","EventEmitter","init","this","$getMaxListeners","that","undefined","_maxListeners","defaultMaxListeners","_addListener","target","type","listener","prepend","events","existing","_events","newListener","emit","_eventsCount","warned","m","w","Error","name","emitter","count","e","console","warn","log","_onceWrap","fired","g","removeListener","apply","listenerCount","evlistener","arrayClone","copy","Object","create","usingDomains","domain","active","getPrototypeOf","setMaxListeners","n","isNaN","getMaxListeners","handler","args","doError","error","er","domainEmitter","domainThrown","err","context","isFn","self","listeners","emitNone","arg1","emitOne","arg2","emitTwo","arg3","emitThree","emitMany","addListener","on","prependListener","once","prependOnceListener","list","position","originalListener","k","pop","spliceOne","removeAllListeners","key","keys","ret","unwrapListeners","eventNames","Reflect","ownKeys","MockerService","opts","app","faker","super","configured","items","startService","prototypeAccessors","total","options","const","json","fs","readFileSync","encoding","JSON","parse","isArray","configureService","schema","_total","server","registerRoutes","baseRoutes","method","request","params","id","item","limit","parseInt","query","skip","route","generateCachedItems","let","generateItem","sch","obj","generateProperty","properties","props","fakerType","handleError","lorem","text","fakerFunc","destroy","find","transport","get","then","data","catch","errMessage","response","message","createStore","namespaced","state","isFindPending","isGetPending","mutations","ADD_ITEM_TO_STORE","UPDATE_TOTAL","IS_FIND_PENDING","FIND_FINISHED","IS_GET_PENDING","GET_FINISHED","actions","findItems","commit","forEach","finally","getItem","getters","getById","findInStore","baseURL","_host","_port","registerServices","createVuexModules","modules","services","service","host","port","_services","_servicesPath","servicesPath","debug","url","transportGet","servicesRegistered","pahtJoin","readdirSync","file","serviceName","checkFile","registerService","serviceConfig","includes","arg","Promise","seedServices","values","msg"],"mappings":"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"}